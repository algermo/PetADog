/*****************************************************************
GUI for the Whack a Mole

@author Molly Alger
*****************************************************************/


import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.*;

import javax.swing.*;

public class GamePanel extends JPanel {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private GameLogic game;
	private JButton[][] board;
	private JLabel scoreLabel;
	private int size;
	private int mole;
	private String[] m;
	private String[] sizes = {"3", "4", "5", "6", "7", "8", "9", "10"};

	private JButton check; 

	public GamePanel() {

		game = new GameLogic();
		
		// create panels for the GUI
		JPanel j = new JPanel();
		j.setLayout(new BorderLayout());
		JPanel top = new JPanel();
		JPanel center = new JPanel();
		JPanel bottom = new JPanel();

		ButtonListener listen = new ButtonListener();

		optionPanes();
		
		// create a grid layout for the board
		center.setLayout(new GridLayout(size, size));

		// fill the board with JLabels
		board = new JButton[size][size];
		for (int row = 0; row < size; row++) {
			for (int col = 0; col < size; col++) {
				board[row][col] = new JButton("X");
				board[row][col].setBackground(Color.white);
				board[row][col].setPreferredSize(new Dimension (75, 50));
				board[row][col].setEnabled(true);
				center.add(board[row][col]);
				board[row][col].addActionListener(listen);
			}
		}

		scoreLabel = new JLabel("");
		displayScore();
		bottom.add(scoreLabel);
		
		// put panels in correct places
		add(j);
		j.add(top, BorderLayout.NORTH);
		j.add(center, BorderLayout.CENTER);
		j.add(bottom, BorderLayout.SOUTH);


		
		
	}
	
	//shows JOptionPanes for user input
		private void optionPanes(){
			
			//get user input for board size
			size = Integer.parseInt((String)
					JOptionPane.showInputDialog
					(null, "How large is the board? (N x N)", "Board Size", 
							JOptionPane.PLAIN_MESSAGE, null, 
							sizes, sizes[0]));
			
			m = new String[size];
			for(int i = 0; i < size; i++)
				m[i] = "" + (i+1);
				
			//get user input for connections to win
			mole = Integer.parseInt((String)
					JOptionPane.showInputDialog
					(null, "Maximum number of moles shown?", "Moles", 
							JOptionPane.PLAIN_MESSAGE, null, 
							m, m[2]));
				
			
		}
	
	//displays the wins for each player
	private void displayScore(){
		String s = "";

		scoreLabel.setText(s);
	}

	private class ButtonListener implements ActionListener {

		public void actionPerformed(ActionEvent e) {
			for (int row = 0; row < size; row++){
				for (int col = 0; col < size; col++) {
					if(board[row][col] == e.getSource()) {
						
					}
				}
			}

		}
	}
}